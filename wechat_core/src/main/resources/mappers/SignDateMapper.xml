<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xsdkj.wechat.mapper.SignDateMapper">
    <resultMap id="BaseResultMap" type="com.xsdkj.wechat.entity.wallet.SignDate">
        <!--@mbg.generated-->
        <!--@Table sign_date-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="platform_id" jdbcType="INTEGER" property="platformId"/>
        <result column="year" jdbcType="INTEGER" property="year"/>
        <result column="month" jdbcType="INTEGER" property="month"/>
        <result column="day" jdbcType="DATE" property="day"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, platform_id, `year`, `month`, `day`, `count`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sign_date
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from sign_date
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xsdkj.wechat.entity.wallet.SignDate"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sign_date (platform_id, `year`, `month`,
        `day`, `count`)
        values (#{platformId,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{month,jdbcType=INTEGER},
        #{day,jdbcType=DATE}, #{count,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xsdkj.wechat.entity.wallet.SignDate"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sign_date
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="platformId != null">
                platform_id,
            </if>
            <if test="year != null">
                `year`,
            </if>
            <if test="month != null">
                `month`,
            </if>
            <if test="day != null">
                `day`,
            </if>
            <if test="count != null">
                `count`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="platformId != null">
                #{platformId,jdbcType=INTEGER},
            </if>
            <if test="year != null">
                #{year,jdbcType=INTEGER},
            </if>
            <if test="month != null">
                #{month,jdbcType=INTEGER},
            </if>
            <if test="day != null">
                #{day,jdbcType=DATE},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xsdkj.wechat.entity.wallet.SignDate">
        <!--@mbg.generated-->
        update sign_date
        <set>
            <if test="platformId != null">
                platform_id = #{platformId,jdbcType=INTEGER},
            </if>
            <if test="year != null">
                `year` = #{year,jdbcType=INTEGER},
            </if>
            <if test="month != null">
                `month` = #{month,jdbcType=INTEGER},
            </if>
            <if test="day != null">
                `day` = #{day,jdbcType=DATE},
            </if>
            <if test="count != null">
                `count` = #{count,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xsdkj.wechat.entity.wallet.SignDate">
        <!--@mbg.generated-->
        update sign_date
        set platform_id = #{platformId,jdbcType=INTEGER},
        `year` = #{year,jdbcType=INTEGER},
        `month` = #{month,jdbcType=INTEGER},
        `day` = #{day,jdbcType=DATE},
        `count` = #{count,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <resultMap id="UserScoreMap" type="com.xsdkj.wechat.entity.wallet.UserScore">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="score" property="score"/>
        <result column="retroactive_count" property="retroactiveCount"/>
        <result column="succession_count" property="successionCount"/>
        <result column="last_sign_date_times" property="lastSignDateTimes"/>
    </resultMap>
    <!--auto generated by MybatisCodeHelper on 2020-01-05-->
    <select id="getOneByDayAndPlatformId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sign_date
        where `day`=#{day,jdbcType=DATE} and platform_id=#{platformId,jdbcType=INTEGER}
    </select>
    <select id="countUserSignDateRelation" resultType="int">
        select count(*) from user_sign_date_relation where uid = #{userId,jdbcType=INTEGER} and sign_date_id =
        #{signDateId,jdbcType=INTEGER};
    </select>
    <insert id="saveUserSingDateRelation">
        insert into user_sign_date_relation (uid, sign_date_id,score,create_times) values
        (#{uid,jdbcType=INTEGER},#{signDateId,jdbcType=INTEGER},#{score},REPLACE(unix_timestamp(current_timestamp(3)),'.',''));
    </insert>
    <select id="getUserScore" resultMap="UserScoreMap">
        select id, uid, score, retroactive_count, succession_count, last_sign_date_times from user_score where uid =
        #{userId,jdbcType=INTEGER};
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-01-06-->
    <select id="getOneByDay" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sign_date
        where `day`=#{day,jdbcType=DATE}
    </select>
    <resultMap id="UserSignDateDetailMap" type="com.xsdkj.wechat.vo.UserSignDateDetailVo">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="create_times" property="createTimes"/>
        <result column="score" property="score"/>
        <result column="username" property="username"/>
        <result column="day" property="date"/>
    </resultMap>
    <select id="listUserSignDateDetail" resultMap="UserSignDateDetailMap">
        select usdr.id,sd.day, usdr.uid, usdr.create_times, usdr.score,u.username
        from user_sign_date_relation usdr
        left join user u on usdr.uid = u.id
        left join sign_date sd on usdr.sign_date_id = sd.id
        where usdr.sign_date_id = #{signDateId}
    </select>
</mapper>
