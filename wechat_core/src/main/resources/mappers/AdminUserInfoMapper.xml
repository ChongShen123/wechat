<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xsdkj.wechat.mapper.AdminUserInfoMapper">
    <resultMap id="BaseResultMap" type="com.xsdkj.wechat.entity.user.User">
        <!--@mbg.generated-->
        <!--@Table user-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="platform_id" jdbcType="INTEGER" property="platformId"/>
        <result column="uno" jdbcType="BIGINT" property="uno"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="gender" jdbcType="TINYINT" property="gender"/>
        <result column="qr" jdbcType="VARCHAR" property="qr"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="create_times" jdbcType="BIGINT" property="createTimes"/>
        <result column="join_ip" jdbcType="VARCHAR" property="joinIp"/>
        <result column="last_login_times" jdbcType="BIGINT" property="lastLoginTimes"/>
        <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp"/>
        <result column="login_state" jdbcType="BOOLEAN" property="loginState"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, platform_id, uno, username, nickname, `password`, icon, gender, qr, tel, qq,
        description, email, `type`, `state`, create_times, join_ip, last_login_times, last_login_ip,
        login_state
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xsdkj.wechat.entity.user.User"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into user (platform_id, uno, username,
        nickname, `password`, icon,
        gender, qr, tel, qq,
        description, email, `type`,
        `state`, create_times, join_ip,
        last_login_times, last_login_ip, login_state
        )
        values (#{platformId,jdbcType=INTEGER}, #{uno,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},
        #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR},
        #{gender,jdbcType=TINYINT}, #{qr,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT},
        #{state,jdbcType=TINYINT}, #{createTimes,jdbcType=BIGINT}, #{joinIp,jdbcType=VARCHAR},
        #{lastLoginTimes,jdbcType=BIGINT}, #{lastLoginIp,jdbcType=VARCHAR}, #{loginState,jdbcType=BOOLEAN}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xsdkj.wechat.entity.user.User"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="platformId != null">
                platform_id,
            </if>
            <if test="uno != null">
                uno,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="qr != null">
                qr,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="createTimes != null">
                create_times,
            </if>
            <if test="joinIp != null">
                join_ip,
            </if>
            <if test="lastLoginTimes != null">
                last_login_times,
            </if>
            <if test="lastLoginIp != null">
                last_login_ip,
            </if>
            <if test="loginState != null">
                login_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="platformId != null">
                #{platformId,jdbcType=INTEGER},
            </if>
            <if test="uno != null">
                #{uno,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=TINYINT},
            </if>
            <if test="qr != null">
                #{qr,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
            <if test="createTimes != null">
                #{createTimes,jdbcType=BIGINT},
            </if>
            <if test="joinIp != null">
                #{joinIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTimes != null">
                #{lastLoginTimes,jdbcType=BIGINT},
            </if>
            <if test="lastLoginIp != null">
                #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="loginState != null">
                #{loginState,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xsdkj.wechat.entity.user.User">
        <!--@mbg.generated-->
        update user
        <set>
            <if test="platformId != null">
                platform_id = #{platformId,jdbcType=INTEGER},
            </if>
            <if test="uno != null">
                uno = #{uno,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=TINYINT},
            </if>
            <if test="qr != null">
                qr = #{qr,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=TINYINT},
            </if>
            <if test="state != null">
                `state` = #{state,jdbcType=TINYINT},
            </if>
            <if test="createTimes != null">
                create_times = #{createTimes,jdbcType=BIGINT},
            </if>
            <if test="joinIp != null">
                join_ip = #{joinIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTimes != null">
                last_login_times = #{lastLoginTimes,jdbcType=BIGINT},
            </if>
            <if test="lastLoginIp != null">
                last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="loginState != null">
                login_state = #{loginState,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectRegisterCount" resultType="java.lang.Integer">
        select count(id) from user
        where
        platform_id=#{platformId,jdbcType=INTEGER} ;
    </select>
    <select id="selectLastLoginTimes" resultType="java.lang.Integer">
        select count(last_login_times) from user where last_login_times >= (UNIX_TIMESTAMP(CAST(SYSDATE()AS DATE))*1000
        )
        and
        platform_id= #{platformId,jdbcType=INTEGER};
    </select>
    <select id="selectOnlineUser" resultType="java.lang.Integer">
        select count(login_state) from user
        where login_state=1
        and
        platform_id=#{platformId,jdbcType=INTEGER}
    </select>
    <resultMap id="UserVoMap" type="com.xsdkj.wechat.vo.UserVo">

        <id column="id" property="id"/>
        <result column="platform_id" property="platformId"/>
        <result column="uno" property="uno"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="icon" property="icon"/>
        <result column="gender" property="gender"/>
        <result column="qr" property="qr"/>
        <result column="tel" property="tel"/>
        <result column="qq" property="qq"/>
        <result column="description" property="description"/>
        <result column="email" property="email"/>
        <result column="type" property="type"/>
        <result column="state" property="state"/>
        <result column="create_times" property="createTimes"/>
        <result column="join_ip" property="joinIp"/>
        <result column="last_login_times" property="lastLoginTimes"/>
        <result column="last_login_ip" property="lastLoginIp"/>
        <result column="login_state" property="loginState"/>
    </resultMap>
    <select id="selectUserInfo" resultMap="UserVoMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id=#{id,jdbcType=INTEGER}
    </select>
    <resultMap id="UserLoginLogoMap" type="com.xsdkj.wechat.dto.UserLoginLogoDto">

    </resultMap>
    <select id="selectUserLoginLog" resultMap="UserLoginLogoMap">
        select
        l.id,u.username,l.ip,l.create_times createTimes
        from
        user_login_log l,user u
        where
        l.uid=u.id
        and
        l.uid=#{id,jdbcType=INTEGER}
    </select>
    <resultMap id="UserWalletMap" type="com.xsdkj.wechat.dto.UserWalletDto">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" property="uid"/>
        <result column="username" property="username"/>
        <result column="price" property="price"/>
        <result column="total_price" property="totalPrice"/>
        <result column="modified_times" property="modifiedTimes"/>
        <result column="state" property="state"/>
    </resultMap>
    <select id="selectUserWallet" resultMap="UserWalletMap">
        select
        w.id,w.uid,u.username,w.price, w.total_price, w.modified_times ,w.state
        from
        wallet w
        left join user u on u.id=w.uid
        where 1=1
        <if test="uid != null">and w.uid = #{uid}</if>
        <if test="username != null">and u.username = #{username}</if>
        <if test="price != null">and w.price = #{price}</if>
        <if test="state != null">and w.state = #{state}</if>
    </select>
    <resultMap id="UserMoodMap" type="com.xsdkj.wechat.dto.UserMoodDto">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" property="uid"/>
        <result column="content" property="content"/>
        <result column="file" property="file"/>
        <result column="file_type" property="fileType"/>
        <result column="comment_count" property="commentCount"/>
        <result column="create_times" property="createTimes"/>
    </resultMap>
    <select id="selectUserMood" resultMap="UserMoodMap">
        select
        id,uid,content,file,file_type,comment_count,create_times
        from
        user_mood u
        where 1=1
        <if test="uid != null">and u.uid = #{uid}</if>
        <if test="commentCount != null">and u.comment_count=#{commentCount}</if>
        <if test="createTimes != null">and u.create_times=#{createTimes}</if>
    </select>
    <resultMap id="UserGroupMap" type="com.xsdkj.wechat.dto.UserGroupDto">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="name" property="name"/>
        <result column="icon" property="icon"/>
        <result column="qr" property="qr"/>
        <result column="notice" property="notice"/>
        <result column="owner_id" property="ownerId"/>
        <result column="members_count" property="membersCount"/>
        <result column="state" property="state"/>
        <result column="add_friend_type" property="addFriendType"/>
        <result column="type" property="type"/>
        <result column="no_say_type" property="noSayType"/>
        <result column="create_times" property="createTimes"/>
        <result column="modified_times" property="modifiedTimes"/>

    </resultMap>
    <select id="selectUserGroup" resultMap="UserGroupMap">
        select
        g.id,ugr.uid,g.name,g.icon,g.qr,g.notice,g.owner_id,g.members_count,g.state,g.add_friend_type,g.type,g.no_say_type,g.create_times,g.modified_times
        from
        user_group g
        left join user_group_relation ugr on g.id = ugr.gid
        where 1=1
        <if test="id != null">and g.id = #{id}</if>
        <if test="uid != null">and ugr.uid = #{uid}</if>
        <if test="name != null">and g.name = #{name}</if>
        <if test="owner_id != null">and g.owner_id = #{ownerId}</if>
        <if test="state != null">and g.state = #{state}</if>
        <if test="type != null">and g.type = #{type}</if>
        <if test="no_say_type != null">and g.no_say_type = #{noSayType}</if>
    </select>


</mapper>
